import { SVGProps } from 'react'

type TIconProps = {
  type: TIconType
  color?: string
  size?: number
}

const Icon = ({ type, size, color }: TIconProps) => {
  const finalColor = color ? color : 'red'

  const properties: SVGProps<SVGPathElement> = { strokeWidth: '1.5', strokeLinecap: 'round', strokeLinejoin: 'round' }

  if (type === 'plus-square') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path d="M11 7.3335V14.6668" stroke={finalColor} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <path d="M7.3335 11H14.6668" stroke={finalColor} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
        <path
          d="M17.4167 2.75H4.58333C3.57081 2.75 2.75 3.57081 2.75 4.58333V17.4167C2.75 18.4292 3.57081 19.25 4.58333 19.25H17.4167C18.4292 19.25 19.25 18.4292 19.25 17.4167V4.58333C19.25 3.57081 18.4292 2.75 17.4167 2.75Z"
          stroke={finalColor}
          {...properties}
        />
      </svg>
    )
  } else if (type === 'more-horizontal') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <circle cx="3" cy="11" r="2" fill="#798391" />
        <circle cx="19" cy="11" r="2" fill="#798391" />
        <circle cx="11" cy="11" r="2" fill="#798391" />
      </svg>
    )
  } else if (type === 'trash') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path d="M2.75 5.5H4.58333H19.25" stroke={finalColor} {...properties} />
        <path
          d="M17.4168 5.50016V18.3335C17.4168 18.8197 17.2237 19.286 16.8799 19.6299C16.536 19.9737 16.0697 20.1668 15.5835 20.1668H6.41683C5.9306 20.1668 5.46428 19.9737 5.12047 19.6299C4.77665 19.286 4.5835 18.8197 4.5835 18.3335V5.50016M7.3335 5.50016V3.66683C7.3335 3.1806 7.52665 2.71428 7.87047 2.37047C8.21428 2.02665 8.6806 1.8335 9.16683 1.8335H12.8335C13.3197 1.8335 13.786 2.02665 14.1299 2.37047C14.4737 2.71428 14.6668 3.1806 14.6668 3.66683V5.50016"
          stroke={finalColor}
          {...properties}
        />
        <path d="M9.1665 10.0835V15.5835" stroke={finalColor} {...properties} />
        <path d="M12.8335 10.0835V15.5835" stroke={finalColor} {...properties} />
      </svg>
    )
  } else if (type === 'sign-out') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path
          d="M8.25 19.25H4.58333C4.0971 19.25 3.63079 19.0568 3.28697 18.713C2.94315 18.3692 2.75 17.9029 2.75 17.4167V4.58333C2.75 4.0971 2.94315 3.63079 3.28697 3.28697C3.63079 2.94315 4.0971 2.75 4.58333 2.75H8.25"
          stroke={finalColor}
          {...properties}
        />
        <path d="M14.6665 15.5832L19.2498 10.9998L14.6665 6.4165" stroke={finalColor} {...properties} />
        <path d="M19.25 11H8.25" stroke={finalColor} strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
      </svg>
    )
  } else if (type === 'chevron-down') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path d="M5.50015 8.25L11.0002 13.75L16.5002 8.25" stroke={finalColor} {...properties} />
      </svg>
    )
  } else if (type === 'settings') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path
          d="M11 14.25C12.5188 14.25 13.75 13.0188 13.75 11.5C13.75 9.98122 12.5188 8.75 11 8.75C9.48122 8.75 8.25 9.98122 8.25 11.5C8.25 13.0188 9.48122 14.25 11 14.25Z"
          stroke={finalColor}
          {...properties}
        />
        <path
          d="M17.7832 14.2498C17.6611 14.5263 17.6247 14.833 17.6787 15.1304C17.7326 15.4277 17.8743 15.7021 18.0857 15.9182L18.1407 15.9732C18.3111 16.1434 18.4464 16.3456 18.5386 16.5682C18.6309 16.7908 18.6784 17.0293 18.6784 17.2703C18.6784 17.5112 18.6309 17.7497 18.5386 17.9723C18.4464 18.1949 18.3111 18.3971 18.1407 18.5673C17.9704 18.7378 17.7682 18.873 17.5456 18.9653C17.3231 19.0575 17.0845 19.105 16.8436 19.105C16.6027 19.105 16.3641 19.0575 16.1415 18.9653C15.919 18.873 15.7168 18.7378 15.5465 18.5673L15.4915 18.5123C15.2755 18.301 15.0011 18.1592 14.7037 18.1053C14.4063 18.0514 14.0997 18.0878 13.8232 18.2098C13.552 18.326 13.3208 18.519 13.158 18.7649C12.9951 19.0108 12.9077 19.299 12.9065 19.594V19.7498C12.9065 20.2361 12.7133 20.7024 12.3695 21.0462C12.0257 21.39 11.5594 21.5832 11.0732 21.5832C10.5869 21.5832 10.1206 21.39 9.77681 21.0462C9.43299 20.7024 9.23984 20.2361 9.23984 19.7498V19.6673C9.23274 19.3639 9.13453 19.0697 8.95797 18.8228C8.78141 18.576 8.53468 18.3879 8.24984 18.2832C7.97336 18.1611 7.66666 18.1247 7.3693 18.1787C7.07194 18.2326 6.79754 18.3743 6.5815 18.5857L6.5265 18.6407C6.35624 18.8111 6.15404 18.9464 5.93148 19.0386C5.70891 19.1309 5.47035 19.1784 5.22942 19.1784C4.98849 19.1784 4.74993 19.1309 4.52736 19.0386C4.3048 18.9464 4.1026 18.8111 3.93234 18.6407C3.76188 18.4704 3.62666 18.2682 3.53439 18.0456C3.44213 17.8231 3.39464 17.5845 3.39464 17.3436C3.39464 17.1027 3.44213 16.8641 3.53439 16.6415C3.62666 16.419 3.76188 16.2168 3.93234 16.0465L3.98734 15.9915C4.19866 15.7755 4.34042 15.5011 4.39434 15.2037C4.44826 14.9063 4.41186 14.5997 4.28984 14.3232C4.17364 14.052 3.9807 13.8208 3.73476 13.658C3.48883 13.4951 3.20064 13.4077 2.90567 13.4065H2.74984C2.26361 13.4065 1.79729 13.2133 1.45347 12.8695C1.10966 12.5257 0.916504 12.0594 0.916504 11.5732C0.916504 11.0869 1.10966 10.6206 1.45347 10.2768C1.79729 9.93299 2.26361 9.73984 2.74984 9.73984H2.83234C3.13575 9.73274 3.43001 9.63453 3.67686 9.45797C3.92371 9.28141 4.11174 9.03468 4.2165 8.74984C4.33853 8.47336 4.37493 8.16666 4.32101 7.8693C4.26709 7.57194 4.12533 7.29754 3.914 7.0815L3.859 7.0265C3.68855 6.85624 3.55332 6.65404 3.46106 6.43148C3.3688 6.20891 3.32131 5.97035 3.32131 5.72942C3.32131 5.48849 3.3688 5.24993 3.46106 5.02736C3.55332 4.8048 3.68855 4.6026 3.859 4.43234C4.02927 4.26188 4.23147 4.12666 4.45403 4.03439C4.67659 3.94213 4.91516 3.89464 5.15609 3.89464C5.39702 3.89464 5.63558 3.94213 5.85814 4.03439C6.08071 4.12666 6.2829 4.26188 6.45317 4.43234L6.50817 4.48734C6.72421 4.69866 6.9986 4.84042 7.29596 4.89434C7.59333 4.94826 7.90002 4.91186 8.1765 4.78984H8.24984C8.52096 4.67364 8.75219 4.4807 8.91506 4.23476C9.07792 3.98883 9.16533 3.70064 9.1665 3.40567V3.24984C9.1665 2.76361 9.35966 2.29729 9.70347 1.95347C10.0473 1.60966 10.5136 1.4165 10.9998 1.4165C11.4861 1.4165 11.9524 1.60966 12.2962 1.95347C12.64 2.29729 12.8332 2.76361 12.8332 3.24984V3.33234C12.8343 3.62731 12.9217 3.9155 13.0846 4.16143C13.2475 4.40736 13.4787 4.6003 13.7498 4.7165C14.0263 4.83853 14.333 4.87493 14.6304 4.82101C14.9277 4.76709 15.2021 4.62533 15.4182 4.414L15.4732 4.359C15.6434 4.18855 15.8456 4.05332 16.0682 3.96106C16.2908 3.8688 16.5293 3.82131 16.7703 3.82131C17.0112 3.82131 17.2497 3.8688 17.4723 3.96106C17.6949 4.05332 17.8971 4.18855 18.0673 4.359C18.2378 4.52927 18.373 4.73147 18.4653 4.95403C18.5575 5.17659 18.605 5.41516 18.605 5.65609C18.605 5.89702 18.5575 6.13558 18.4653 6.35814C18.373 6.58071 18.2378 6.7829 18.0673 6.95317L18.0123 7.00817C17.801 7.22421 17.6592 7.4986 17.6053 7.79596C17.5514 8.09333 17.5878 8.40002 17.7098 8.6765V8.74984C17.826 9.02096 18.019 9.25219 18.2649 9.41506C18.5108 9.57792 18.799 9.66533 19.094 9.6665H19.2498C19.7361 9.6665 20.2024 9.85966 20.5462 10.2035C20.89 10.5473 21.0832 11.0136 21.0832 11.4998C21.0832 11.9861 20.89 12.4524 20.5462 12.7962C20.2024 13.14 19.7361 13.3332 19.2498 13.3332H19.1673C18.8724 13.3343 18.5842 13.4217 18.3382 13.5846C18.0923 13.7475 17.8994 13.9787 17.7832 14.2498Z"
          stroke={finalColor}
          {...properties}
        />
      </svg>
    )
  } else if (type === 'hide-sidebar') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path
          d="M17.4167 2.75H4.58333C3.57081 2.75 2.75 3.57081 2.75 4.58333V17.4167C2.75 18.4292 3.57081 19.25 4.58333 19.25H17.4167C18.4292 19.25 19.25 18.4292 19.25 17.4167V4.58333C19.25 3.57081 18.4292 2.75 17.4167 2.75Z"
          stroke={finalColor}
          {...properties}
        />
        <path d="M8.25 2.75V19.25" stroke={finalColor} {...properties} />
        <path d="M15 14L12 11.5L15 9" stroke={finalColor} {...properties} />
      </svg>
    )
  } else if (type === 'show-sidebar') {
    const defaultWidth = size ? size : 24
    return (
      <svg width={defaultWidth} height={defaultWidth} viewBox="0 0 22 22" fill="none">
        <path
          d="M17.4167 2.75H4.58333C3.57081 2.75 2.75 3.57081 2.75 4.58333V17.4167C2.75 18.4292 3.57081 19.25 4.58333 19.25H17.4167C18.4292 19.25 19.25 18.4292 19.25 17.4167V4.58333C19.25 3.57081 18.4292 2.75 17.4167 2.75Z"
          stroke={finalColor}
          {...properties}
        />
        <path d="M8.25 2.75V19.25" stroke={finalColor} {...properties} />
        <path d="M12 9L15 11.5L12 14" stroke={finalColor} {...properties} />
      </svg>
    )
  }

  return null
}

export default Icon

export type TIconType =
  | 'plus-square'
  | 'more-horizontal'
  | 'trash'
  | 'sign-out'
  | 'chevron-down'
  | 'settings'
  | 'hide-sidebar'
  | 'show-sidebar'
